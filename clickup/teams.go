package clickup

type AutoGenerated struct {
	teams []Team
}

type Team struct {
	ID      string `json:"id"`
	Name    string `json:"name"`
	Color   string `json:"color"`
	Avatar  string `json:"avatar"`
	Members []struct {
		User struct {
			ID             int    `json:"id"`
			Username       string `json:"username"`
			Email          string `json:"email"`
			Color          string `json:"color,omitempty"`
			ProfilePicture string `json:"profilePicture,omitempty"`
			Initials       string `json:"initials"`
			Role           int    `json:"role"`
			CustomRole     string `json:"custom_role,omitempty"`
			LastActive     string `json:"last_active"`
			DateJoined     string `json:"date_joined"`
			DateInvited    string `json:"date_invited"`
		} `json:"user"`
		InvitedBy struct {
			ID             int    `json:"id"`
			Username       string `json:"username"`
			Color          string `json:"color"`
			Email          string `json:"email"`
			Initials       string `json:"initials"`
			ProfilePicture string `json:"profilePicture,omitempty"`
		} `json:"invited_by,omitempty"`
	} `json:"members"`
}

type TramResponse struct {
	Id          string
	TeamId      string
	UserId      int32
	Name        string
	Handle      string
	DataCreated string
	Initials    string
	Members     []TeamMemberResponse
	Avatars     []AvatarResponse
}

type TeamMemberResponse struct {
	Id             int32
	Username       string
	Email          string
	Color          string
	Initials       string
	ProfilePicture string
}

type AvatarResponse struct {
	AttachmentId string
	Color        string
	Source       string
	Icon         string
}

func (c ClickUpAPI) Teams() []Team {
	response := struct {
		Team []Team `json:"teams"`
	}{}
	c.sendRequest("/team", &response)
	return response.Team
}